spring.datasource.url=jdbc:postgresql://localhost:5432/GENESIS?currentSchema=core&stringtype=unspecified
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql =true

# Schema 1 : Connection pooling configurations
spring.datasource.initial-size=34 
spring.datasource.max-active=377 
spring.datasource.max-idle=233 
spring.datasource.min-idle=89 
spring.datasource.time-between-eviction-runs-millis=34000 
spring.datasource.min-evictable-idle-time-millis=55000 
spring.datasource.validation-query=SELECT 1 
spring.datasource.validation-interval=34000 
spring.datasource.test-on-borrow=true 
spring.datasource.remove-abandoned=true 
spring.datasource.remove-abandoned-timeout=55

# Schema 2 : Database connection configurations
spring.datasource2.url=
spring.datasource2.username=
spring.datasource2.password=

# Schema 2 : Learn database connection pooling configurations
spring.datasource2.initial-size=34 
spring.datasource2.max-active=377 
spring.datasource2.max-idle=233 
spring.datasource2.min-idle=89 
spring.datasource2.time-between-eviction-runs-millis=34000 
spring.datasource2.min-evictable-idle-time-millis=55000 
spring.datasource2.validation-query=SELECT 1 
spring.datasource2.validation-interval=34000 
spring.datasource2.test-on-borrow=true 
spring.datasource2.remove-abandoned=true 
spring.datasource2.remove-abandoned-timeout=55

#Spring jpa hibernate configuration
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.jdbc.time_zone=UTC

# Added after Multiple DB. Otherwise giving error "TableStructure - could not read a hi value"
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#spring.jpa.properties.hibernate.cache.use_query_cache=true
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory


application.version=0.1
security.oauth2.resource.filter-order = 3

com.pepcus.oauth.security.access.token.validity.seconds=300
com.pepcus.oauth.security.refresh.token.validity.seconds=1800

#JWT token related configurations
JWT.jwt_key=Y19SOjaodTHuncQMUoqZRtG8PmqnN1Lc
JWT.jwt_iss=pepcus-dev

# Crypto algorithm encryptions
com.pepcus.apps.crypto.algo=BCrypt
com.pepcus.apps.crypto.encrypt.key=ZG4viBINvBYcThYW
# For AES algorithm as it must be 16 bytes long
com.pepcus.apps.crypto.initVector=PepcusAppsDEVOPS
# For Blowfish algorithm as it must be 8 bytes long

#app.environment=dev (If it's value ='dev' then JWT token based authorization will be disabled)
app.environment=dev-pepcus

#Default Password
com.pepcus.apps.user.default.password=Pepcus@4637

# Default Email Service Channel
com.pepcus.apps.emailService=SendGrid
com.pepcus.apps.emailService.enabled=false
com.pepcus.apps.threadpool.size=20

default_support_email=customersuccess@pepcus.com
default_support_phone=

#Comma separated list of request urls those should skip authorization
skip.authorization.urls=/v1/static/**

app.default.tenant=8148

com.pepcus.apps.clientId.size=8
com.pepcus.apps.clientSecret.size=32

# Properties configured for AWS S3 Bucket 
aws.access.key=
aws.secret.key=
aws.region=
aws.private.bucket.names=
aws.private.esignature.bucket.name=com.pepcus-dev

highcharts.server=
highcharts.server.port=

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

spring.devtools.restart.enabled=false